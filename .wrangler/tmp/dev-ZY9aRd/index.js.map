{
  "version": 3,
  "sources": ["../bundle-4pWuVl/checked-fetch.js", "../../../src/style.js", "../../../src/views/homeView.js", "../../../src/views/publicView.js", "../../../src/views/loginView.js", "../../../src/views/adminView.js", "../../../src/index.js", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-4pWuVl/middleware-insertion-facade.js", "../../../../../../../AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-4pWuVl/middleware-loader.entry.ts"],
  "sourceRoot": "C:\\Users\\lhby1\\OneDrive\\\u00C1rea de Trabalho\\teste da entrevista\\Teste-da-empresa\\.wrangler\\tmp\\dev-ZY9aRd",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export const globalStyle = `\r\n  /* ===== RESET E BASE ===== */\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    font-family: 'Inter', 'Helvetica Neue', Arial, sans-serif;\r\n    background: linear-gradient(135deg, #e0f7fa, #ffffff);\r\n    padding: 40px;\r\n    color: #2c3e50;\r\n    text-align: center;\r\n    min-height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n  }\r\n\r\n  h1, h2 {\r\n    color: #00796b;\r\n    font-weight: 700;\r\n    margin-bottom: 20px;\r\n    letter-spacing: 0.5px;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n    margin: 15px 0;\r\n    line-height: 1.6;\r\n    color: #555;\r\n  }\r\n\r\n  a {\r\n    display: inline-block;\r\n    text-decoration: none;\r\n    color: #fff;\r\n    background: #00796b;\r\n    padding: 12px 28px;\r\n    border-radius: 10px;\r\n    transition: all 0.3s ease;\r\n    font-weight: 600;\r\n    box-shadow: 0 4px 12px rgba(0,0,0,0.15);\r\n  }\r\n\r\n  a:hover {\r\n    background: #004d40;\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 8px 20px rgba(0,0,0,0.2);\r\n  }\r\n\r\n  /* ===== TABELAS ===== */\r\n  table {\r\n    width: 90%;\r\n    margin: 30px auto;\r\n    border-collapse: collapse;\r\n    border-radius: 12px;\r\n    overflow: hidden;\r\n    background-color: #ffffff;\r\n    box-shadow: 0 8px 24px rgba(0,0,0,0.08);\r\n    font-size: 14px;\r\n  }\r\n\r\n  th, td {\r\n    padding: 16px;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    text-align: left;\r\n    transition: background 0.3s ease;\r\n  }\r\n\r\n  th {\r\n    background-color: #00796b;\r\n    color: #fff;\r\n    font-weight: 700;\r\n    letter-spacing: 0.5px;\r\n  }\r\n\r\n  tr:nth-child(even) {\r\n    background-color: #f1f8f8;\r\n  }\r\n\r\n  tr:hover {\r\n    background-color: #c8e6c9;\r\n  }\r\n\r\n  /* ===== PRE FORMATADO ===== */\r\n  pre {\r\n    background-color: #fdfdfd;\r\n    padding: 20px;\r\n    border-radius: 12px;\r\n    text-align: left;\r\n    max-width: 90%;\r\n    overflow-x: auto;\r\n    box-shadow: inset 0 2px 4px rgba(0,0,0,0.05);\r\n    font-family: 'Fira Code', monospace;\r\n  }\r\n\r\n  /* ===== LOGIN PAGE ===== */\r\n  .login-box {\r\n    background: #ffffff;\r\n    padding: 3rem 2.5rem;\r\n    border-radius: 16px;\r\n    box-shadow: 0 12px 28px rgba(0,0,0,0.12);\r\n    width: 380px;\r\n    text-align: center;\r\n    margin: 8% auto;\r\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  }\r\n\r\n  .login-box:hover {\r\n    transform: translateY(-6px);\r\n    box-shadow: 0 20px 40px rgba(0,0,0,0.15);\r\n  }\r\n\r\n  .login-box h2 {\r\n    margin-bottom: 2rem;\r\n    color: #00796b;\r\n    font-size: 1.8rem;\r\n  }\r\n\r\n  .login-box input {\r\n    width: 100%;\r\n    padding: 0.9rem;\r\n    margin: 0.6rem 0;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n    font-size: 15px;\r\n    transition: all 0.3s ease;\r\n  }\r\n\r\n  .login-box input:focus {\r\n    outline: none;\r\n    border-color: #00796b;\r\n    box-shadow: 0 0 8px rgba(0,121,107,0.25);\r\n    background-color: #f0f9f9;\r\n  }\r\n\r\n  .login-box button {\r\n    background: #00796b;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 0.9rem;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n    width: 100%;\r\n    font-weight: 700;\r\n    font-size: 15px;\r\n    transition: all 0.3s ease;\r\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\r\n  }\r\n\r\n  .login-box button:hover {\r\n    background: #004d40;\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 8px 20px rgba(0,0,0,0.2);\r\n  }\r\n\r\n  .error {\r\n    color: #d32f2f;\r\n    margin-bottom: 1rem;\r\n    font-weight: 600;\r\n    background-color: #ffebee;\r\n    padding: 10px 14px;\r\n    border-radius: 8px;\r\n    box-shadow: inset 0 1px 3px rgba(0,0,0,0.05);\r\n  }\r\n\r\n  /* ===== RESPONSIVIDADE ===== */\r\n  @media (max-width: 480px) {\r\n    .login-box {\r\n      width: 90%;\r\n      padding: 2rem;\r\n    }\r\n\r\n    table {\r\n      width: 100%;\r\n      font-size: 13px;\r\n    }\r\n\r\n    h1, h2 {\r\n      font-size: 1.4rem;\r\n    }\r\n\r\n    .login-box h2 {\r\n      font-size: 1.6rem;\r\n    }\r\n  }\r\n`;\r\n", "import { globalStyle } from \"../style.js\";\r\n\r\nexport function homeHTML() {\r\n  return `\r\n    <html>\r\n      <head>\r\n        <title>Cloudflare Worker</title>\r\n        <style>${globalStyle}</style>\r\n      </head>\r\n      <body>\r\n        <h1>Crie ou acesse sua conta</h1>\r\n        <p><a href=\"/publico\">Registrar acesso</a></p>\r\n        <p><a href=\"/admin\">Area Administrador</a></p>\r\n      </body>\r\n    </html>\r\n  `;\r\n}\r\n", "import { globalStyle } from \"../style.js\";\r\n\r\nexport function publicoHTML(fingerprint) {\r\n  return `\r\n    <html>\r\n      <head>\r\n        <title>Acesso Registrado</title>\r\n        <style>${globalStyle}</style>\r\n      </head>\r\n      <body>\r\n        <h2>Acesso registrado!</h2>\r\n        <p>IP: ${fingerprint.ip || \"N\u00E3o dispon\u00EDvel\"}</p>\r\n        <p>Navegador: ${fingerprint.userAgent}</p>\r\n        <p>Idioma: ${fingerprint.language}</p>\r\n        <p>Data: ${new Date(fingerprint.date).toLocaleString('pt-BR')}</p>\r\n        <p><a href=\"/\">Voltar</a></p>\r\n      </body>\r\n    </html>\r\n  `;\r\n}", "import { globalStyle } from \"../style.js\";\r\n\r\nexport function loginHTML(errorMessage = \"\") {\r\n  return `\r\n    <html>\r\n      <head>\r\n        <title>Login Admin</title>\r\n        <style>${globalStyle}</style>\r\n      </head>\r\n      <body>\r\n        <div class=\"login-box\">\r\n          <h2>Area Administrativa</h2>\r\n          ${errorMessage ? `<div class=\"error\">${errorMessage}</div>` : \"\"}\r\n          <form method=\"POST\" action=\"/admin\">\r\n            <input type=\"text\" name=\"usuario\" placeholder=\"Usuario\" required />\r\n            <input type=\"password\" name=\"senha\" placeholder=\"Senha\" required />\r\n            <button type=\"submit\">Entrar</button>\r\n          </form>\r\n        </div>\r\n        <p><a href=\"/\">Voltar</a></p>\r\n      </body>\r\n    </html>\r\n  `;\r\n}\r\n", "import { globalStyle } from \"../style.js\";\r\n\r\nexport function adminHTML(tableRows) {\r\n  return `\r\n    <html>\r\n      <head>\r\n        <title>Admin - Acessos</title>\r\n        <style>${globalStyle}</style>\r\n      </head>\r\n      <body>\r\n        <h1>Registros de Acesso</h1>\r\n        <table>\r\n          <tr><th>ID</th><th>IP</th><th>Usu\u00E1rio</th><th>Idioma</th><th>Data</th></tr>\r\n          ${tableRows}\r\n        </table>\r\n        <p><a href=\"/\">Voltar</a></p>\r\n      </body>\r\n    </html>\r\n  `;\r\n}\r\n", "import { homeHTML } from \"./views/homeView.js\";\r\nimport { publicoHTML } from \"./views/publicView.js\";\r\nimport { loginHTML } from \"./views/loginView.js\";\r\nimport { adminHTML } from \"./views/adminView.js\";\r\nimport { registroPublico } from \"./controllers/publicController.js\";\r\nimport { loginAdmin } from \"./controllers/adminController.js\";\r\n\r\nexport default {\r\n  async fetch(request, env) {\r\n    const url = new URL(request.url);\r\n\r\n    // Rota principal\r\n    if (url.pathname === \"/\") {\r\n      return new Response(homeHTML(), { headers: { \"Content-Type\": \"text/html\" }});\r\n    } \r\n    \r\n    // Rota p\u00FAblica\r\n    else if (url.pathname === \"/publico\") {\r\n      const fingerprint = {\r\n        ip: request.headers.get(\"CF-Connecting-IP\") || request.headers.get(\"X-Forwarded-For\") || \"0.0.0.0\",\r\n        userAgent: request.headers.get(\"User-Agent\"),\r\n        language: request.headers.get(\"Accept-Language\"),\r\n        date: new Date().toISOString()\r\n      };\r\n\r\n      // Salva no banco D1\r\n      await env.DB.prepare(\r\n        \"INSERT INTO acessos (ip, userAgent, language, date) VALUES (?, ?, ?, ?)\"\r\n      ).bind(fingerprint.ip, fingerprint.userAgent, fingerprint.language, fingerprint.date)\r\n       .run();\r\n\r\n      return new Response(publicoHTML(fingerprint), { headers: { \"Content-Type\": \"text/html\" }});\r\n    } \r\n    \r\n    // Rota administrativa\r\n    else if (url.pathname === \"/admin\") {\r\n      if (request.method === \"GET\") {\r\n        return new Response(loginHTML(), { headers: { \"Content-Type\": \"text/html\" }});\r\n      }\r\n\r\n      if (request.method === \"POST\") {\r\n        const formData = await request.formData();\r\n        const usuario = formData.get(\"usuario\");\r\n        const senha = formData.get(\"senha\");\r\n\r\n        // Autentica\u00E7\u00E3o simples\r\n        if (usuario === \"lucas\" && senha === \"1234\") {\r\n          const { results } = await env.DB.prepare(\"SELECT * FROM acessos\").all();\r\n          const tableRows = results.map(r =>\r\n            `<tr><td>${r.id}</td><td>${r.ip}</td><td>${r.userAgent}</td><td>${r.language}</td><td>${r.date}</td></tr>`\r\n          ).join(\"\");\r\n\r\n          return new Response(adminHTML(tableRows), { headers: { \"Content-Type\": \"text/html\" }});\r\n        } else {\r\n          return new Response(loginHTML(\"Usuario ou senha incorretos\"), { headers: { \"Content-Type\": \"text/html\" }});\r\n        }\r\n      }\r\n    } \r\n    \r\n    // Rota n\u00E3o encontrada\r\n    else {\r\n      return new Response(\"Rota n\u00E3o encontrada\", { status: 404 });\r\n    }\r\n  }\r\n};\r\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"C:\\\\Users\\\\lhby1\\\\OneDrive\\\\\u00C1rea de Trabalho\\\\teste da entrevista\\\\Teste-da-empresa\\\\src\\\\index.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\lhby1\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\lhby1\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"C:\\\\Users\\\\lhby1\\\\OneDrive\\\\\u00C1rea de Trabalho\\\\teste da entrevista\\\\Teste-da-empresa\\\\src\\\\index.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"C:\\\\Users\\\\lhby1\\\\OneDrive\\\\\u00C1rea de Trabalho\\\\teste da entrevista\\\\Teste-da-empresa\\\\.wrangler\\\\tmp\\\\bundle-4pWuVl\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\lhby1\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"C:\\\\Users\\\\lhby1\\\\OneDrive\\\\\u00C1rea de Trabalho\\\\teste da entrevista\\\\Teste-da-empresa\\\\.wrangler\\\\tmp\\\\bundle-4pWuVl\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"C:\\\\Users\\\\lhby1\\\\OneDrive\\\\\u00C1rea de Trabalho\\\\teste da entrevista\\\\Teste-da-empresa\\\\.wrangler\\\\tmp\\\\bundle-4pWuVl\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": []
}
